# fairytale
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name asmdnfljaksdfladsnfasd.ru;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/chain.pem;

    # Security headers
    include nginxconfig.io/security.conf;

    # Logging
    access_log /var/log/nginx/asmdnfljaksdfladsnfasd.ru.access.log;
    error_log /var/log/nginx/asmdnfljaksdfladsnfasd.ru.error.log warn;

    client_max_body_size 0;

    # Reverse proxy with no caching
    location / {
        include nginxconfig.io/proxy.conf;
        proxy_pass http://127.0.0.1:3000;
    }

    # Additional configuration
    include nginxconfig.io/general.conf;
}

# fairytale
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name app.asmdnfljaksdfladsnfasd.ru;

    ssl_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/chain.pem;

    include nginxconfig.io/security.conf;
    include nginxconfig.io/general.conf;

    access_log /var/log/nginx/app.asmdnfljaksdfladsnfasd.ru.access.log;
    error_log /var/log/nginx/app.asmdnfljaksdfladsnfasd.ru.error.log warn;

    root /home/fairytale/front/dist;

    # Hashed JS/CSS (files with contenthash in name) - immutable caching
    location ~* ^/[a-zA-Z0-9_]+\.[a-zA-Z0-9_]+\.(js|css)$ {
        try_files $uri =404;

        # Cache settings
        expires max;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header X-Cache-Status $upstream_cache_status;

        access_log off;
    }

    # Non-hashed JS/CSS (development or fallback) - shorter caching
    location ~* \.(js|css)$ {
        try_files $uri =404;

        # Cache settings
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Static assets with caching
    location ~* \.(ttf|woff2|svg)$ {
        try_files $uri =404;

        # Cache settings
        expires 1d;
        add_header Cache-Control "public";
        add_header X-Cache-Status $upstream_cache_status;
        access_log off;
    }

    # Images with aggressive caching
    location ~* \.(jpg|jpeg|png|gif|ico|webp|avif)$ {
        try_files $uri =404;

        # Cache settings
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        access_log off;
    }

    # Main app route - no caching
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
}

# kirstallium
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name kristall.asmdnfljaksdfladsnfasd.ru;

    ssl_certificate /etc/letsencrypt/live/kristall.asmdnfljaksdfladsnfasd.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kristall.asmdnfljaksdfladsnfasd.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/kristall.asmdnfljaksdfladsnfasd.ru/chain.pem;

    include nginxconfig.io/security.conf;
    include nginxconfig.io/general.conf;

    access_log /var/log/nginx/kristall.asmdnfljaksdfladsnfasd.ru.access.log;
    error_log /var/log/nginx/kristall.asmdnfljaksdfladsnfasd.ru.error.log warn;

    root /home/kirstallium/dist;

    # Hashed JS/CSS (files with contenthash in name) - immutable caching
    location ~* ^/[a-zA-Z0-9_]+\.[a-zA-Z0-9_]+\.(js|css)$ {
        try_files $uri =404;

        # Cache settings
        expires max;
        add_header Cache-Control "public, immutable, max-age=31536000";
        add_header X-Cache-Status $upstream_cache_status;

        access_log off;
    }

    # Non-hashed JS/CSS (development or fallback) - shorter caching
    location ~* \.(js|css)$ {
        try_files $uri =404;

        # Cache settings
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Cache-Status $upstream_cache_status;
    }

    # Static assets with caching
    location ~* \.(ttf|woff2|svg)$ {
        try_files $uri =404;

        # Cache settings
        expires 1d;
        add_header Cache-Control "public";
        add_header X-Cache-Status $upstream_cache_status;
        access_log off;
    }

    # Images with aggressive caching
    location ~* \.(jpg|jpeg|png|gif|ico|webp|avif)$ {
        try_files $uri =404;

        # Cache settings
        expires 30d;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        access_log off;
    }

    # Main app route - no caching
    location / {
        try_files $uri $uri/ /index.html;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }
}

# royal (estate)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name royal.asmdnfljaksdfladsnfasd.ru;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/chain.pem;

    # Security headers
    include nginxconfig.io/security.conf;

    # Logging
    access_log /var/log/nginx/royal.asmdnfljaksdfladsnfasd.ru.access.log;
    error_log /var/log/nginx/royal.asmdnfljaksdfladsnfasd.ru.error.log warn;

    # Reverse proxy
    location / {
        proxy_pass http://127.0.0.1:8089;
        include nginxconfig.io/proxy.conf;
    }

    # Additional configuration
    include nginxconfig.io/general.conf;
}

# astrology

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name astro.asmdnfljaksdfladsnfasd.ru;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/chain.pem;

    # Security headers
    include nginxconfig.io/security.conf;

    # Logging
    access_log /var/log/nginx/astro.asmdnfljaksdfladsnfasd.ru.access.log;
    error_log /var/log/nginx/astro.asmdnfljaksdfladsnfasd.ru.error.log warn;

    # Reverse proxy
    location / {
        proxy_pass http://127.0.0.1:5228;
        include nginxconfig.io/proxy.conf;
    }

    # Additional configuration
    include nginxconfig.io/general.conf;
}

# Wildcard subdomains redirect to the main domain

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    server_name *.asmdnfljaksdfladsnfasd.ru;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/asmdnfljaksdfladsnfasd.ru/chain.pem;

    # Redirect to the main domain
    return 301 https://asmdnfljaksdfladsnfasd.ru$request_uri;

}

# HTTP to HTTPS redirect for all domains

server {
    listen 80;
    listen [::]:80;

    server_name .asmdnfljaksdfladsnfasd.ru;

    location / {
        return 301 https://$host$request_uri;
    }

    # ACME challenge for Let's Encrypt
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/_letsencrypt;
    }

}